// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: iUXm84svJVBsZ4AeMYaQEb
// Component: pA4_1dGYioZLh
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: E9c6sDTNANyOh/component
import Button from "../../Button"; // plasmic-import: Ogk4iYJnyyZDl/component
import Section from "../../Section"; // plasmic-import: 0PIRCuckIACEhF/component
import DiagramCard from "../../DiagramCard"; // plasmic-import: vV35LNsi-zpB-H/component
import ProductCard from "../../ProductCard"; // plasmic-import: 2iWduBEiKdWRvj/component
import DetailAbout from "../../DetailAbout"; // plasmic-import: fvZtKl6Vt4DRao/component
import PriceSection from "../../PriceSection"; // plasmic-import: 3_ik9euI5DB4j9/component
import PriceCard from "../../PriceCard"; // plasmic-import: U3x6H3MUUns7wm/component
import FooterSection from "../../FooterSection"; // plasmic-import: Wtiss8r-gwmukV/component

import { useScreenVariants as useScreenVariants_0L5INpOlLFvNx1 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 0L5INpOlLFvNX1/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_dark_saa_s_landing_page.module.css"; // plasmic-import: iUXm84svJVBsZ4AeMYaQEb/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: pA4_1dGYioZLh/css

import IconArrowRightsvgIcon from "./icons/PlasmicIcon__IconArrowRightsvg"; // plasmic-import: hWfhEnvqYqflXJ/icon
import diagramsvg4YpV5IGd86WxAz from "./images/diagramsvg.svg"; // plasmic-import: 4ypV5IGd86WxAz/picture
import logoHero1Png6DPmd0XUvzVGr from "./images/logoHero1Png.png"; // plasmic-import: 6DPmd0x-UvzVGr/picture
import logoHero2PngSkuaFiKoLtidob from "./images/logoHero2Png.png"; // plasmic-import: SkuaFiKoLtidob/picture
import logoHero3PngI9U0VX30F5U4V from "./images/logoHero3Png.png"; // plasmic-import: i_9U0vX30F5U4V/picture
import logoHero4PngYCgs0N1AxWvC3H from "./images/logoHero4Png.png"; // plasmic-import: yCgs0n1AXWvC3H/picture
import diagramImgsvgSY3VAi7HI2TyU from "./images/diagramImgsvg.svg"; // plasmic-import: sY3VAi7h-i2TyU/picture
import ellipseLeftpngPLfdKgJx0CUn5W from "./images/ellipseLeftpng.png"; // plasmic-import: pLFDKgJx0CUn5W/picture
import ellipseRightpngN5YFymimnmfffA from "./images/ellipseRightpng.png"; // plasmic-import: n5YFymimnmfffA/picture
import terminalpngAq8SO1KxBlRzgM from "./images/terminalpng.png"; // plasmic-import: Aq8sO1KxBlRzgM/picture
import line1PngT8TPl4GAwZv52Y from "./images/line1Png.png"; // plasmic-import: t8tPL4gAwZv52Y/picture
import lineBranchpngPllpkOtkiu7GL from "./images/lineBranchpng.png"; // plasmic-import: pllpkOTKIU7G-L/picture
import line2PngKiz03YJouTbn9C from "./images/line2Png.png"; // plasmic-import: KIZ03yJouTbn9C/picture
import dollarpngGiqfu1MlCfDcLz from "./images/dollarpng.png"; // plasmic-import: GIQFU1MlCfDcLz/picture
import messagepngZ5I2Qcu95TvS93 from "./images/messagepng.png"; // plasmic-import: z5I2qcu95tvS93/picture
import importpng514Jk6GWhlO9SJ from "./images/importpng.png"; // plasmic-import: 514JK6gWhlO9sJ/picture
import exportpngPYxZm3975Dmamw from "./images/exportpng.png"; // plasmic-import: PYxZM3975Dmamw/picture
import message2PngGNcxoHy8TgIv2X from "./images/message2Png.png"; // plasmic-import: GNcxoHy8tgIV2X/picture
import message3PngTNsgU5Pt3OsnWf from "./images/message3Png.png"; // plasmic-import: TNsgU5Pt3OsnWf/picture
import macbookpng3XyBwmPzh7PqTi from "./images/macbookpng.png"; // plasmic-import: 3xyBWMPzh7pqTi/picture
import galleri11PngHd6T9XrjaMzOx from "./images/galleri11Png.png"; // plasmic-import: HD6T9_xrjaMZOx/picture
import galleri12PngDz0HQzxn4S8Zy1 from "./images/galleri12Png.png"; // plasmic-import: DZ0hQzxn4S8zy1/picture
import galleri13PngP3VjbYPwhpyws from "./images/galleri13Png.png"; // plasmic-import: p3vjbYPwhpyws_/picture
import galleri21PngV4K744CjmypVv from "./images/galleri21Png.png"; // plasmic-import: v4-k744CjmypVv/picture
import galleri22PngYm8Xp4CPhnZlp from "./images/galleri22Png.png"; // plasmic-import: YM8xp4c-phnZLP/picture
import galleri23Png4JskAi4XrIsiu from "./images/galleri23Png.png"; // plasmic-import: 4JSK_AI4XRIsiu/picture
import aboutImgpngD0NdCv0SInQo from "./images/aboutImgpng.png"; // plasmic-import: D0ND-Cv0-sInQO/picture
import aboutIpsumpngYk17SChljHqz from "./images/aboutIpsumpng.png"; // plasmic-import: yk17-S-chljHqz/picture
import backtippng7E0BHcIQbfjqqO from "./images/backtippng.png"; // plasmic-import: 7e0BHcIQbfjqqO/picture
import arrowLeftpngIeTcHLqBbusLhk from "./images/arrowLeftpng.png"; // plasmic-import: IeTcHLqBbusLhk/picture
import arrowRightpng2Vv5PKJ3SO5GVu from "./images/arrowRightpng2.png"; // plasmic-import: vv5pK_J3sO5gVU/picture
import pricingImgsvgJfUdEw6QnJogIx from "./images/pricingImgsvg.svg"; // plasmic-import: JFUdEW6QNJogIx/picture

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  h1?: p.Flex<"h1">;
  diagramSection?: p.Flex<typeof Section>;
  deviceSection?: p.Flex<typeof Section>;
  gallerySection?: p.Flex<typeof Section>;
  productSection?: p.Flex<typeof Section>;
  aboutSection?: p.Flex<typeof Section>;
  priceSection?: p.Flex<typeof PriceSection>;
  startSection?: p.Flex<typeof Section>;
  h3?: p.Flex<"h3">;
  pricingSection?: p.Flex<typeof Section>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {
  className?: string;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_0L5INpOlLFvNx1()
  });

  return (
    <React.Fragment>
      {}

      {}

      <div className={projectcss.plasmic_page_wrapper}>
        {(hasVariant(globalVariants, "screen", "mobileOnly") ? true : true) ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"headerHeroSection"}
                data-plasmic-override={overrides.headerHeroSection}
                hasGap={true}
                className={classNames(projectcss.all, sty.headerHeroSection)}
              >
                {true ? (
                  <Navbar
                    data-plasmic-name={"navbar"}
                    data-plasmic-override={overrides.navbar}
                    className={classNames("__wab_instance", sty.navbar)}
                  />
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__shT0I)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fXwQj)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9SnfD
                      )}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Analytics for developers can be better"
                          : "Analytics for \ndevelopers can\nbe better"}
                      </h1>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dnUv9
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                          : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ja1Vy
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__bcgkX
                          )}
                          color={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("blueSmall" as const)
                              : ("blue" as const)
                          }
                          endIcon={
                            (
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? true
                                : true
                            ) ? (
                              <IconArrowRightsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__hCW7
                                )}
                                role={"img"}
                              />
                            ) : null
                          }
                          link={"#" as const}
                          showEndIcon={true}
                          startIcon={
                            <svg
                              className={classNames(
                                projectcss.all,
                                sty.svg__ijNsa
                              )}
                              role={"img"}
                            />
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1Mocf
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Try Demo For Free"
                              : "Try Demo For Free"}
                          </div>
                        </Button>

                        {(
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? true
                            : true
                        ) ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__qDl4B
                            )}
                            color={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? ("blueBorderSmall" as const)
                                : ("blueBorder" as const)
                            }
                            endIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__u3Xr
                                )}
                                role={"img"}
                              />
                            }
                            link={"#" as const}
                            startIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kDJcS
                                )}
                                role={"img"}
                              />
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uoYv4
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "Learn More"
                                : "Learn More"}
                            </div>
                          </Button>
                        ) : null}
                      </p.Stack>

                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : false
                      ) ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rrqB
                          )}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__wHsMe
                            )}
                            color={"blueBorder" as const}
                            endIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__eaShA
                                )}
                                role={"img"}
                              />
                            }
                            startIcon={
                              <svg
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xTD3
                                )}
                                role={"img"}
                              />
                            }
                          >
                            {"Learn More"}
                          </Button>

                          {(
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? true
                              : true
                          ) ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__rzyI5
                              )}
                              color={"blueBorder" as const}
                              endIcon={
                                <svg
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__xgrH4
                                  )}
                                  role={"img"}
                                />
                              }
                              startIcon={
                                <svg
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___0EIox
                                  )}
                                  role={"img"}
                                />
                              }
                            >
                              {"Learn More"}
                            </Button>
                          ) : null}
                        </div>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__r65Ul)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___794Q4)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"none" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("0px" as const)
                            : ("661px" as const)
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("100%" as const)
                            : ("100%" as const)
                        }
                        loading={"lazy" as const}
                        src={{
                          src: diagramsvg4YpV5IGd86WxAz,
                          fullWidth: 173,
                          fullHeight: 150,
                          aspectRatio: 1.151631
                        }}
                      />
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pKFl
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Powering with magnificant of Companies"
                      : "Powering with magnificant of Companies"}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___0NWis)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__iHYtf)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero1Png6DPmd0XUvzVGr,
                        fullWidth: 233,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__fOz98)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero2PngSkuaFiKoLtidob,
                        fullWidth: 189,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__cfec)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero3PngI9U0VX30F5U4V,
                        fullWidth: 194,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hozm7)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("170px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: logoHero4PngYCgs0N1AxWvC3H,
                        fullWidth: 189,
                        fullHeight: 50,
                        aspectRatio: undefined
                      }}
                    />
                  </p.Stack>
                </div>
              </p.Stack>
            ) : null}

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__mLuwx)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: diagramImgsvgSY3VAi7HI2TyU,
                fullWidth: 300,
                fullHeight: 100,
                aspectRatio: 2.987552
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__ndMi6)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"774px" as const}
              loading={"lazy" as const}
              src={{
                src: ellipseLeftpngPLfdKgJx0CUn5W,
                fullWidth: 469,
                fullHeight: 742,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__vlzE)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: ellipseRightpngN5YFymimnmfffA,
                fullWidth: 437,
                fullHeight: 742,
                aspectRatio: undefined
              }}
            />

            <Section
              data-plasmic-name={"diagramSection"}
              data-plasmic-override={overrides.diagramSection}
              className={classNames("__wab_instance", sty.diagramSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__gBcI4)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__qtqNl
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor \nsit amet"
                    : "Lorem ipsum dolor \nsit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4Yxsm
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__nxP3Y)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("249px" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: terminalpngAq8SO1KxBlRzgM,
                    fullWidth: 624,
                    fullHeight: 333,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qz2P)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("auto" as const)
                      : ("auto" as const)
                  }
                  loading={"lazy" as const}
                  src={{
                    src: line1PngT8TPl4GAwZv52Y,
                    fullWidth: 11,
                    fullHeight: 150,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ht68A)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("50px" as const)
                      : ("100%" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: lineBranchpngPllpkOtkiu7GL,
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___0Zi67)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("auto" as const)
                      : ("auto" as const)
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("500px" as const)
                      : ("770px" as const)
                  }
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("auto" as const)
                      : ("auto" as const)
                  }
                  loading={"lazy" as const}
                  src={{
                    src: line2PngKiz03YJouTbn9C,
                    fullWidth: 844,
                    fullHeight: 284,
                    aspectRatio: undefined
                  }}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tutdh)}
                >
                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__oaEbg
                    )}
                  />

                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard__p9Blr
                    )}
                  />

                  <DiagramCard
                    className={classNames(
                      "__wab_instance",
                      sty.diagramCard___9KksG
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pImOf)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cMRl3)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: dollarpngGiqfu1MlCfDcLz,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__h0Tva)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: messagepngZ5I2Qcu95TvS93,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qUtmM)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: importpng514Jk6GWhlO9SJ,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__y2JUl)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: lineBranchpngPllpkOtkiu7GL,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nmLca)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: exportpngPYxZm3975Dmamw,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jqm8L)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: message2PngGNcxoHy8TgIv2X,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__sYwmF)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("none" as const)
                    }
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("72px" as const)
                        : ("100%" as const)
                    }
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: message3PngTNsgU5Pt3OsnWf,
                      fullWidth: 100,
                      fullHeight: 100,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__o7Bg
                  )}
                >
                  {"Lorem ipsum dolor \nsit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__muOPq
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                  }
                </div>
              </div>
            </Section>

            <Section
              data-plasmic-name={"deviceSection"}
              data-plasmic-override={overrides.deviceSection}
              background={"dark" as const}
              className={classNames("__wab_instance", sty.deviceSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__lDtkq)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__habcy
                  )}
                >
                  {"Lorem ipsum dolor sit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y1CgF
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."}
                </div>
              </div>

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___4XPJm)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("360px" as const)
                    : ("100%" as const)
                }
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: macbookpng3XyBwmPzh7PqTi,
                  fullWidth: 900,
                  fullHeight: 565,
                  aspectRatio: undefined
                }}
              />
            </Section>

            <Section
              data-plasmic-name={"gallerySection"}
              data-plasmic-override={overrides.gallerySection}
              className={classNames("__wab_instance", sty.gallerySection)}
              size={"fullContentGallery" as const}
            >
              <div className={classNames(projectcss.all, sty.freeBox__taSvz)}>
                <div className={classNames(projectcss.all, sty.columns__d01EX)}>
                  <div
                    className={classNames(projectcss.all, sty.column___39ZL)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__foujH)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri11PngHd6T9XrjaMzOx,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___77BWl)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___5ODep)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri12PngDz0HQzxn4S8Zy1,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__fg7Vh)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__n417A)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri13PngP3VjbYPwhpyws,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>

                <div
                  className={classNames(projectcss.all, sty.columns___8DmDv)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__zeDRk)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__vhV95)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri21PngV4K744CjmypVv,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__tnEDv)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__s9U7)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri22PngYm8Xp4CPhnZlp,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__cegt)}>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___4BKg3)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"300px" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: galleri23Png4JskAi4XrIsiu,
                        fullWidth: 700,
                        fullHeight: 300,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
            </Section>

            <Section
              data-plasmic-name={"productSection"}
              data-plasmic-override={overrides.productSection}
              className={classNames("__wab_instance", sty.productSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__ojUMw)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__ezwO9
                  )}
                >
                  {"Lorem ipsum dolor sit amet"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eEs76
                  )}
                >
                  {
                    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \neiusmod tempor incididunt ut labore et dolore magna aliqua."
                  }
                </div>

                <Button
                  className={classNames("__wab_instance", sty.button___8Unrr)}
                  color={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? ("blue" as const)
                      : ("blue" as const)
                  }
                  endIcon={
                    <svg
                      className={classNames(projectcss.all, sty.svg___2Ekv5)}
                      role={"img"}
                    />
                  }
                  link={"#" as const}
                  startIcon={
                    <svg
                      className={classNames(projectcss.all, sty.svg__inhL)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uiJte
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Get Started"
                      : "Get Started"}
                  </div>
                </Button>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zo6Cq)}
                >
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__bgAiY
                    )}
                  />

                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard___4H27T
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pkqtk)}
                >
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__kbLbA
                    )}
                  />

                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard___3Is3A
                    )}
                  />
                </p.Stack>
              </div>
            </Section>

            <Section
              data-plasmic-name={"aboutSection"}
              data-plasmic-override={overrides.aboutSection}
              background={"dark" as const}
              className={classNames("__wab_instance", sty.aboutSection)}
              size={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("mobile" as const)
                  : undefined
              }
            >
              <div className={classNames(projectcss.all, sty.freeBox__pI98)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___0Icb
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "What people say \nabout us"
                    : "What people say about us"}
                </h2>

                <div className={classNames(projectcss.all, sty.freeBox__lTefu)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__atWlP)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__xoEs)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("339px" as const)
                          : ("100%" as const)
                      }
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      loading={"lazy" as const}
                      src={{
                        src: aboutImgpngD0NdCv0SInQo,
                        fullWidth: 400,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__fHyvh)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__pMb0V
                      )}
                    >
                      {"Michael Justin"}
                    </h2>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__kX0UR)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__wd0KG)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: aboutIpsumpngYk17SChljHqz,
                          fullWidth: 152,
                          fullHeight: 40,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uYdRm
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CEO Company"
                          : "CEO Company"}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__lN6QT)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__moF7)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("auto" as const)
                            : ("auto" as const)
                        }
                        loading={"lazy" as const}
                        src={{
                          src: backtippng7E0BHcIQbfjqqO,
                          fullWidth: 34,
                          fullHeight: 32,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uE3Us
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
                        : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."}
                    </div>
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___5YndD)}
                >
                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__gUKqn
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout___0PWqt
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__feuxX
                    )}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vHkKj)}
                >
                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__faOna
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__oitaa
                    )}
                  />

                  <DetailAbout
                    className={classNames(
                      "__wab_instance",
                      sty.detailAbout__qwPgH
                    )}
                  />
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__omDdi)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: arrowLeftpngIeTcHLqBbusLhk,
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: undefined
                    }}
                  />
                ) : null}

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mncQv)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: arrowRightpng2Vv5PKJ3SO5GVu,
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: undefined
                    }}
                  />
                ) : null}
              </div>
            </Section>

            {true ? (
              <PriceSection
                data-plasmic-name={"priceSection"}
                data-plasmic-override={overrides.priceSection}
                className={classNames("__wab_instance", sty.priceSection)}
              />
            ) : null}

            <Section
              data-plasmic-name={"startSection"}
              data-plasmic-override={overrides.startSection}
              className={classNames("__wab_instance", sty.startSection)}
              size={"fullContentWidth" as const}
            >
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__ixx5K)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zvDcq)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: pricingImgsvgJfUdEw6QnJogIx,
                      fullWidth: 300,
                      fullHeight: 67,
                      aspectRatio: 4.468401
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.columns__t04C)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__hHaWx)}
                    >
                      <h3
                        data-plasmic-name={"h3"}
                        data-plasmic-override={overrides.h3}
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Start using our product today"
                          : "Start using our product today"}
                      </h3>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hTsGi
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."
                          : "Faster than free analytics tools. Access to all your data, with respect to the privacy of your users."}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__abkBp)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__w557B
                        )}
                        color={"white" as const}
                        endIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg__neDtH
                            )}
                            role={"img"}
                          />
                        }
                        link={"#" as const}
                        startIcon={
                          <svg
                            className={classNames(
                              projectcss.all,
                              sty.svg___6ELbl
                            )}
                            role={"img"}
                          />
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kjJuj
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Get Started"
                            : "Get Started"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </div>
              ) : null}
            </Section>

            {true ? (
              <Section
                data-plasmic-name={"pricingSection"}
                data-plasmic-override={overrides.pricingSection}
                className={classNames("__wab_instance", sty.pricingSection)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__c3QMv)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__jl3Ai)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__mBief)}
                    >
                      <PriceCard
                        borders={["flatLeft"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__dDs5
                        )}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__yWwDz)}
                    >
                      <PriceCard
                        borders={["flatCenter"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__zzsxi
                        )}
                      />

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aQxNl
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yfbkR
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "We Recommended"
                              : "We Recommended"}
                          </div>
                        </div>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__bl4Jb)}
                    >
                      <PriceCard
                        borders={["flatRight"]}
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__pgNyL
                        )}
                      />
                    </div>
                  </p.Stack>
                </div>
              </Section>
            ) : null}

            {true ? (
              <FooterSection
                data-plasmic-name={"footerSection"}
                data-plasmic-override={overrides.footerSection}
                className={classNames("__wab_instance", sty.footerSection)}
              />
            ) : null}
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "h1",
    "diagramSection",
    "deviceSection",
    "gallerySection",
    "productSection",
    "aboutSection",
    "priceSection",
    "startSection",
    "h3",
    "pricingSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar", "h1"],
  navbar: ["navbar"],
  h1: ["h1"],
  diagramSection: ["diagramSection"],
  deviceSection: ["deviceSection"],
  gallerySection: ["gallerySection"],
  productSection: ["productSection"],
  aboutSection: ["aboutSection"],
  priceSection: ["priceSection"],
  startSection: ["startSection", "h3"],
  h3: ["h3"],
  pricingSection: ["pricingSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  h1: "h1";
  diagramSection: typeof Section;
  deviceSection: typeof Section;
  gallerySection: typeof Section;
  productSection: typeof Section;
  aboutSection: typeof Section;
  priceSection: typeof PriceSection;
  startSection: typeof Section;
  h3: "h3";
  pricingSection: typeof Section;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    h1: makeNodeComponent("h1"),
    diagramSection: makeNodeComponent("diagramSection"),
    deviceSection: makeNodeComponent("deviceSection"),
    gallerySection: makeNodeComponent("gallerySection"),
    productSection: makeNodeComponent("productSection"),
    aboutSection: makeNodeComponent("aboutSection"),
    priceSection: makeNodeComponent("priceSection"),
    startSection: makeNodeComponent("startSection"),
    h3: makeNodeComponent("h3"),
    pricingSection: makeNodeComponent("pricingSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
